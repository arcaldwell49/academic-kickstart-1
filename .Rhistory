# nice interpretation as a series of mean differences and are therefore easy to understand
#### THREE GROUP ####
# Ceofficients for this case. Modify as desired
# First is the intercept, second is the focal contrast, remainder are the residual contrasts
coefs <- c(0, .7, .2)
# Create the data
# The last line creates the outcome using the coefficients above and the desired sampling error, err
# %*% is matrix multiplication
dat_three <- data.frame(group = rep(paste("group", 1:3), n_per_cell))
dat_three <- mutate(
dat_three,
c1 = case_when(group == "group 1" ~ 2 / 3, TRUE ~ -1 /
3),
c2 = case_when(group == "group 1" ~ 0, group == "group 2" ~ 1 /
2, TRUE ~ -1 / 2),
outcome = as.vector(cbind(1, c1, c2) %*% coefs + rnorm(nrow(dat_three), sd =
err))
) %>%
mutate(group = factor(group,
levels = c("group 1",
"group 2",
"group 3"),
ordered = TRUE)) # creates and ordered & labeled factor for group
knitr::kable(head(dat_three),
caption = "3-group data")
# Add subject id
rowid_to_column(dat_three)
# Build model using afex; note we must have an error term "(1|id)"
afex_three = afex::aov_4(outcome ~ group + (1|id),
data = dat_three)
# Add subject id
rowid_to_column(dat_three, var = "id")
# Build model using afex; note we must have an error term "(1|id)"
afex_three = afex::aov_4(outcome ~ group + (1|id),
data = dat_three)
# Add subject id
dat_three = rowid_to_column(dat_three, var = "id")
# Build model using afex; note we must have an error term "(1|id)"
afex_three = afex::aov_4(outcome ~ group + (1|id),
data = dat_three)
model.matrix(afex_three$lm)
# Add subject id
dat_three = rowid_to_column(dat_three, var = "id")
# Build model using afex; note we must have an error term "(1|id)"
afex_three = afex::aov_4(outcome ~ group + (1|id),
data = dat_three)
nice(afex_three)
knitr::kable(nice(afex_three))
emm_three = emmeans(afex_three, ~group)
tidy(emm_three)
# Build model using afex; note we must have an error term "(1|id)"
afex_three = afex::aov_4(outcome ~ group + (1|id),
data = dat_three)
# Output tyical ANOVA table with type-3 SS
knitr::kable(nice(afex_three))
# Now get emmeans
emm_three = emmeans(afex_three, ~group)
# Estimated marginal means
knitr::kable(emm_three %>%
select(-df,-statistic,-p.value))
# Build model using afex; note we must have an error term "(1|id)"
afex_three = afex::aov_4(outcome ~ group + (1|id),
data = dat_three)
# Output tyical ANOVA table with type-3 SS
knitr::kable(nice(afex_three))
# Now get emmeans
emm_three = emmeans(afex_three, ~group)
# Estimated marginal means
knitr::kable(tidy(emm_three) %>%
select(-df,-statistic,-p.value))
# Build model using afex; note we must have an error term "(1|id)"
afex_three = afex::aov_4(outcome ~ group + (1|id),
data = dat_three)
# Output tyical ANOVA table with type-3 SS
knitr::kable(nice(afex_three))
# Now get emmeans
emm_three = emmeans(afex_three, ~group)
# Estimated marginal means
knitr::kable(tidy(emm_three) %>%
select(-df,-statistic,-p.value))
# Create orthogonal contrasts
con_three = list(c1 = c(1,-.5,-.5),
c2 = c(0,-1,1))
contrast(emm_three,con_three)
# Patrick's Example
m_three <- lm(outcome ~ c1 + c2, data=dat_three)
knitr::kable(tidy(m_three),
caption = "3-group Contrasts using lm")
?contrast
?test
contrast(emm_three,con_three,side = ">")
contrast(emm_three,con_three)
contrast(emm_three,con_three,side = ">")
# Build model using afex; note we must have an error term "(1|id)"
afex_three = afex::aov_4(outcome ~ group + (1|id),
data = dat_three)
# Output tyical ANOVA table with type-3 SS
knitr::kable(nice(afex_three))
# Now get emmeans
emm_three = emmeans(afex_three, ~group)
# Estimated marginal means
knitr::kable(tidy(emm_three) %>%
select(-df,-statistic,-p.value))
# Create orthogonal contrasts
con_three = list(c1 = c(1,-.5,-.5),
c2 = c(0,1,-1))
contrast(emm_three,con_three)
contrast(emm_three,con_three,side = ">")
con_three$c1
check_orthog(cbind(con_three$c1,
con_three$c2))
# Build model using afex; note we must have an error term "(1|id)"
afex_three = afex::aov_4(outcome ~ group + (1|id),
data = dat_three)
# Output tyical ANOVA table with type-3 SS
knitr::kable(nice(afex_three))
# Now get emmeans
emm_three = emmeans(afex_three, ~group)
# Estimated marginal means
knitr::kable(tidy(emm_three) %>%
select(-df,-statistic,-p.value))
# Create orthogonal contrasts
con_three = list(c1 = c(1,-.5,-.5),
c2 = c(0,1,-1))
check_orthog(cbind(con_three$c1,
con_three$c2))
# Make comparisons with contrast function
knitr::kable(contrast(emm_three,con_three),
caption = "3-group emmeans contrasts")
contrast(emm_three,con_three,side = ">")
?afex_options
# Add subject id
dat_three = rowid_to_column(dat_three, var = "id")
afex_options(es_aov = "pes")
# Build model using afex; note we must have an error term "(1|id)"
afex_three = afex::aov_4(outcome ~ group + (1|id),
data = dat_three)
# Output tyical ANOVA table with type-3 SS
knitr::kable(nice(afex_three))
# Build model using afex; note we must have an error term "(1|id)"
afex_three = afex::aov_4(outcome ~ group + (1|id),
data = dat_three)
# Output tyical ANOVA table with type-3 SS
knitr::kable(nice(afex_three))
?test
# Create contrast
con_three_eq = contrast(emm_three,con_three)
#
test_three_eq = test(con_three_eq,
delta = .4, # eq bound
side = "equivalence")
# Create contrast
con_three_eq = contrast(emm_three,con_three)
#
test_three_eq = test(con_three_eq,
delta = .4, # eq bound
side = "equivalence")
knitr::kable(test_three_eq)
#### FOUR GROUP ####
# Ceofficients for this case. Modify as desired
# First is the intercept, second is the focal contrast, remainder are the residual contrasts
coefs <- c(0, .7, .2, .1)
# Create the data
# The last line creates the outcome using the coefficients above and the desired sampling error, err
# %*% is matrix multiplication
dat_four <- data.frame(group = rep(paste("group", 1:4), n_per_cell))
dat_four <- mutate(
dat_four,
c1 = case_when(group == "group 1" ~ -3 / 4, TRUE ~ 1 /
4),
c2 = case_when(group == "group 1" ~ 0, group == "group 2" ~ 2 /
3, TRUE ~ -1 / 3),
c3 = case_when(
group %in% c("group 1", "group 2") ~ 0,
group == "group 3" ~ 1 / 2,
TRUE ~ -1 / 2
),
outcome = as.vector(cbind(1, c1, c2, c3) %*% coefs + rnorm(nrow(dat_four), sd =
err))
) %>%
mutate(group = factor(
group,
levels = c("group 1",
"group 2",
"group 3",
"group 4"),
ordered = TRUE
)) %>% # creates and ordered & labeled factor for group
rowid_to_column()
knitr::kable(head(dat_four),
caption = "4 Groups Data")
#### FOUR GROUP ####
# Ceofficients for this case. Modify as desired
# First is the intercept, second is the focal contrast, remainder are the residual contrasts
coefs <- c(0, .7, .2, .1)
# Create the data
# The last line creates the outcome using the coefficients above and the desired sampling error, err
# %*% is matrix multiplication
dat_four <- data.frame(group = rep(paste("group", 1:4), n_per_cell))
dat_four <- mutate(
dat_four,
c1 = case_when(group == "group 1" ~ -3 / 4, TRUE ~ 1 /
4),
c2 = case_when(group == "group 1" ~ 0, group == "group 2" ~ 2 /
3, TRUE ~ -1 / 3),
c3 = case_when(
group %in% c("group 1", "group 2") ~ 0,
group == "group 3" ~ 1 / 2,
TRUE ~ -1 / 2
),
outcome = as.vector(cbind(1, c1, c2, c3) %*% coefs + rnorm(nrow(dat_four), sd =
err))
) %>%
mutate(group = factor(
group,
levels = c("group 1",
"group 2",
"group 3",
"group 4"),
ordered = TRUE
)) %>% # creates and ordered & labeled factor for group
rowid_to_column(var = "id")
knitr::kable(head(dat_four),
caption = "4 Groups Data")
# Build model using afex; note we must have an error term "(1|id)"
afex_four = afex::aov_4(outcome ~ group + (1|id),
data = dat_four)
# Output tyical ANOVA table with type-3 SS
knitr::kable(nice(afex_three),
caption = "ANOVA: Four Groups")
# Build model using afex; note we must have an error term "(1|id)"
afex_four = afex::aov_4(outcome ~ group + (1|id),
data = dat_four)
# Output tyical ANOVA table with type-3 SS
knitr::kable(nice(afex_four),
caption = "ANOVA: Four Groups")
#### FOUR GROUP ####
# Ceofficients for this case. Modify as desired
# First is the intercept, second is the focal contrast, remainder are the residual contrasts
coefs <- c(0, .7, .2, .1)
# Create the data
# The last line creates the outcome using the coefficients above and the desired sampling error, err
# %*% is matrix multiplication
dat_four <- data.frame(group = rep(paste("group", 1:4), n_per_cell))
dat_four <- mutate(
dat_four,
c1 = case_when(group == "group 1" ~ -3 / 4, TRUE ~ 1 /
4),
c2 = case_when(group == "group 1" ~ 0, group == "group 2" ~ 2 /
3, TRUE ~ -1 / 3),
c3 = case_when(
group %in% c("group 1", "group 2") ~ 0,
group == "group 3" ~ 1 / 2,
TRUE ~ -1 / 2
),
outcome = as.vector(cbind(1, c1, c2, c3) %*% coefs + rnorm(nrow(dat_four), sd =
err))
) %>%
mutate(group = factor(
group,
levels = c("group 1",
"group 2",
"group 3",
"group 4"),
ordered = TRUE
)) %>% # creates and ordered & labeled factor for group
rowid_to_column(var = "id")
knitr::kable(head(dat_four),
caption = "4-Groups Data")
# Now get emmeans
emm_four = emmeans(afex_four, ~group)
# Estimated marginal means
knitr::kable(tidy(emm_four) %>%
select(-df,-statistic,-p.value))
# Create orthogonal contrasts
con_four = list(c1 = c(1,-1/3,-1/3,-1/3),
c2 = c(0,1,-0.5,-0.5),
c3 = c(0,0,.5,-.5))
check_orthog(cbind(con_four$c1,
con_four$c2,
con_four$c3))
# Make comparisons with contrast function
knitr::kable(contrast(emm_four,con_four),
caption = "4-group emmeans contrasts")
# Perform joint test
# Build model using afex; note we must have an error term "(1|id)"
afex_four = afex::aov_4(outcome ~ group + (1|id),
data = dat_four)
# Output tyical ANOVA table with type-3 SS
knitr::kable(nice(afex_four),
caption = "ANOVA: Four Groups")
# Perform joint test
test(contrast(emm_four,con_four), joint = TRUE)
?joint_tests
?contrast
contrast(emm_four)
plot(contrast(emm_four,con_four))
?plot.emmGrid
pwpp(emm_four)
# Now get emmeans
emm_four = emmeans(afex_four, ~group,
adjust = "none")
pwpp(emm_four)
joint_test(emm_four)
joint_tests(emm_four)
# Perform joint test
test(emm_four,con_four, joint = TRUE)
# Perform joint test
joint_tests(emm_four,con_four)
# Perform joint test
joint_tests(contrast(emm_four,con_four))
check_orthog(mat)
pigs.lm <- lm(log(conc) ~ source * factor(percent), data = pigs)
joint_tests(pigs.lm)                     ## will be same as type III ANOVA
joint_tests(pigs.lm, weights = "outer")  ## differently weighted
joint_tests(pigs.lm, by = "source")      ## separate joint tests of 'percent'
m_four <- lm(outcome ~ c1 + c2 + c3, data=dat_four)
### Test of the focal contrast against 0 ###
summary(m_four)
### Test of the residual contrasts against 0 ###
# It probably makes sense to do a joint test of all of them in this case
# because there are multiple residual contrasts rather than one
lht(m_four, c("c2=0", "c3=0"))
### Test of the residual contrasts against 0 ###
# It probably makes sense to do a joint test of all of them in this case
# because there are multiple residual contrasts rather than one
library(car)
lht(m_four, c("c2=0", "c3=0"))
?lht
lht(emm_four)
lht(m_four)
ht(m_four, c("c2=0", "c3=0"))
lht(m_four, c("c2=0", "c3=0"))
# Now get emmeans
emm_four = emmeans(afex_four, ~group,
adjust = "none")
# Estimated marginal means
knitr::kable(tidy(emm_four) %>%
select(-df,-statistic,-p.value))
# Create orthogonal contrasts
con_four = list(c1 = c(1,-1/3,-1/3,-1/3),
c2 = c(0,1,-0.5,-0.5),
c3 = c(0,0,.5,-.5))
check_orthog(cbind(con_four$c1,
con_four$c2,
con_four$c3))
# Make comparisons with contrast function
knitr::kable(contrast(emm_four,con_four),
caption = "4-group emmeans contrasts")
# Perform joint test
joint_tests(contrast(emm_four,con_four))
m_four <- lm(outcome ~ c1 + c2 + c3, data=dat_four)
lht(m_four, c("c2=0", "c3=0"))
knitr::kable(nice(afex_four),
caption = "ANOVA: Four Groups")
emm_cons_four = contrast(emm_four,con_four)
emm_cons_four
lht(m_four, c("c1=0","c2=0", "c3=0"))
con_four[2:3]
# Now get emmeans
emm_four = emmeans(afex_four, ~group,
adjust = "none")
# Estimated marginal means
knitr::kable(tidy(emm_four) %>%
select(-df,-statistic,-p.value))
# Create orthogonal contrasts
con_four = list(c1 = c(1,-1/3,-1/3,-1/3),
c2 = c(0,1,-0.5,-0.5),
c3 = c(0,0,.5,-.5))
check_orthog(cbind(con_four$c1,
con_four$c2,
con_four$c3))
# Perform joint test
knitr::kable(joint_tests(contrast(emm_four,con_four[2:3])),
caption = "Joint Tests of Residual Contrasts")
lht(m_four, c("c2=0", "c3=0"))
knitr::kable(joint_tests(contrast(emm_four,con_four[2:3])),
caption = "Joint Tests of Residual Contrasts")
library(tidyverse)
library(afex)
library(emmeans)
library(broom)
set.seed(432432) # For reproducibility
# For all examples, I'm using the below sampling error sd and n per cell
err <- 1
n_per_cell <- 200
# I'm also assuming the following:
# (1) our smallest effect of substantive interest is .4
# (2) all contrasts are Helment (successively compare one group to the average of the others)
# (3) all contrasts are unit-weighted
# This method should generalize to other orthogonal contrasts
# The parameter estimates for unit-weighted Helmert contrasts, however, have a
# nice interpretation as a series of mean differences and are therefore easy to understand
#### THREE GROUP ####
# Ceofficients for this case. Modify as desired
# First is the intercept, second is the focal contrast, remainder are the residual contrasts
coefs <- c(0, .7, .2)
# Create the data
# The last line creates the outcome using the coefficients above and the desired sampling error, err
# %*% is matrix multiplication
dat_three <- data.frame(group = rep(paste("group", 1:3), n_per_cell))
dat_three <- mutate(
dat_three,
c1 = case_when(group == "group 1" ~ 2 / 3, TRUE ~ -1 /
3),
c2 = case_when(group == "group 1" ~ 0, group == "group 2" ~ 1 /
2, TRUE ~ -1 / 2),
outcome = as.vector(cbind(1, c1, c2) %*% coefs + rnorm(nrow(dat_three), sd =
err))
) %>%
mutate(group = factor(group,
levels = c("group 1",
"group 2",
"group 3"),
ordered = TRUE)) # creates and ordered & labeled factor for group
knitr::kable(head(dat_three),
caption = "3-group data")
# Patrick's Example
m_three <- lm(outcome ~ c1 + c2, data=dat_three)
knitr::kable(tidy(m_three),
caption = "3-group Contrasts using lm")
# Add subject id
dat_three = rowid_to_column(dat_three, var = "id")
afex_options(es_aov = "pes")
# Build model using afex; note we must have an error term "(1|id)"
afex_three = afex::aov_4(outcome ~ group + (1|id),
data = dat_three)
# Output tyical ANOVA table with type-3 SS
knitr::kable(nice(afex_three))
# Now get emmeans
emm_three = emmeans(afex_three, ~group)
# Estimated marginal means
knitr::kable(tidy(emm_three) %>%
select(-df,-statistic,-p.value))
# Create orthogonal contrasts
con_three = list(c1 = c(1,-.5,-.5),
c2 = c(0,1,-1))
check_orthog(cbind(con_three$c1,
con_three$c2))
# Make comparisons with contrast function
knitr::kable(contrast(emm_three,con_three),
caption = "3-group emmeans contrasts")
knitr::kable(contrast(emm_three,con_three,side = ">"),
caption = "3-group emmeans w/ directional contrasts")
# Create contrast
con_three_eq = contrast(emm_three,con_three)
# Perform equivalence test (takes absolute difference)
test_three_eq = test(con_three_eq,
delta = .4, # eq bound
side = "equivalence")
knitr::kable(test_three_eq,
caption = "Equivalence Tests for 3-group example")
#### FOUR GROUP ####
# Ceofficients for this case. Modify as desired
# First is the intercept, second is the focal contrast, remainder are the residual contrasts
coefs <- c(0, .7, .2, .1)
# Create the data
# The last line creates the outcome using the coefficients above and the desired sampling error, err
# %*% is matrix multiplication
dat_four <- data.frame(group = rep(paste("group", 1:4), n_per_cell))
dat_four <- mutate(
dat_four,
c1 = case_when(group == "group 1" ~ -3 / 4, TRUE ~ 1 /
4),
c2 = case_when(group == "group 1" ~ 0, group == "group 2" ~ 2 /
3, TRUE ~ -1 / 3),
c3 = case_when(
group %in% c("group 1", "group 2") ~ 0,
group == "group 3" ~ 1 / 2,
TRUE ~ -1 / 2
),
outcome = as.vector(cbind(1, c1, c2, c3) %*% coefs + rnorm(nrow(dat_four), sd =
err))
) %>%
mutate(group = factor(
group,
levels = c("group 1",
"group 2",
"group 3",
"group 4"),
ordered = TRUE
)) %>% # creates and ordered & labeled factor for group
rowid_to_column(var = "id")
knitr::kable(head(dat_four),
caption = "4-Groups Data")
# Build model using afex; note we must have an error term "(1|id)"
afex_four = afex::aov_4(outcome ~ group + (1|id),
data = dat_four)
# Output tyical ANOVA table with type-3 SS
knitr::kable(nice(afex_four),
caption = "ANOVA: Four Groups")
# Now get emmeans
emm_four = emmeans(afex_four, ~group,
adjust = "none")
# Estimated marginal means
knitr::kable(tidy(emm_four) %>%
select(-df,-statistic,-p.value))
# Create orthogonal contrasts
con_four = list(c1 = c(1,-1/3,-1/3,-1/3),
c2 = c(0,1,-0.5,-0.5),
c3 = c(0,0,.5,-.5))
check_orthog(cbind(con_four$c1,
con_four$c2,
con_four$c3))
# Perform joint test
knitr::kable(joint_tests(contrast(emm_four,con_four[2:3])),
caption = "Joint Tests of Residual Contrasts")
test(contrast(emm_four,con_four[2:3]),joint=TRUE)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
